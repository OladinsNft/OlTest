"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/mint",{

/***/ "./scripts/whitelist.js":
/*!******************************!*\
  !*** ./scripts/whitelist.js ***!
  \******************************/
/***/ (function(module) {

eval("\n/**\n *  This array contains the addresses of the whitelisted users.\n *  Make sure to add your white-listed users to this array. Otherwise,\n *  they will not be able to interact with the contract and mint on pre-sale process. For the public sale,\n *  the whitelist is not required.\n *\n *  ** IMPORTANT: **\n *  Since we are passing the whitelist root (merkleroot) to the contract constructor when deploying,\n *  if you add a new user address to the whitelist or remove an existing user address from the whitelist,\n *  you must change the merkleroot in the contract. For this reason, I created a new script to update the merkleroot\n *  in the contract. You can find it in `scripts/setMerkleRoot.js`.\n */ module.exports = [\n    '0x933572D5F83B00A998102b7bf1a99c0f197E685B',\n    '0x8a7aC9834e2D4487Da22Dc130C97Ee8fBDc85568'\n];\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zY3JpcHRzL3doaXRlbGlzdC5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsRUFXRzs7Ozs7Ozs7Ozs7Q0FBQSxHQUVIQSxNQUFNLENBQUNDLE9BQU8sR0FBRyxDQUFDO0lBQ2hCLENBQTRDO0lBQzVDLENBQTRDO0FBQzlDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc2NyaXB0cy93aGl0ZWxpc3QuanM/NjRiMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqICBUaGlzIGFycmF5IGNvbnRhaW5zIHRoZSBhZGRyZXNzZXMgb2YgdGhlIHdoaXRlbGlzdGVkIHVzZXJzLlxuICogIE1ha2Ugc3VyZSB0byBhZGQgeW91ciB3aGl0ZS1saXN0ZWQgdXNlcnMgdG8gdGhpcyBhcnJheS4gT3RoZXJ3aXNlLFxuICogIHRoZXkgd2lsbCBub3QgYmUgYWJsZSB0byBpbnRlcmFjdCB3aXRoIHRoZSBjb250cmFjdCBhbmQgbWludCBvbiBwcmUtc2FsZSBwcm9jZXNzLiBGb3IgdGhlIHB1YmxpYyBzYWxlLFxuICogIHRoZSB3aGl0ZWxpc3QgaXMgbm90IHJlcXVpcmVkLlxuICpcbiAqICAqKiBJTVBPUlRBTlQ6ICoqXG4gKiAgU2luY2Ugd2UgYXJlIHBhc3NpbmcgdGhlIHdoaXRlbGlzdCByb290IChtZXJrbGVyb290KSB0byB0aGUgY29udHJhY3QgY29uc3RydWN0b3Igd2hlbiBkZXBsb3lpbmcsXG4gKiAgaWYgeW91IGFkZCBhIG5ldyB1c2VyIGFkZHJlc3MgdG8gdGhlIHdoaXRlbGlzdCBvciByZW1vdmUgYW4gZXhpc3RpbmcgdXNlciBhZGRyZXNzIGZyb20gdGhlIHdoaXRlbGlzdCxcbiAqICB5b3UgbXVzdCBjaGFuZ2UgdGhlIG1lcmtsZXJvb3QgaW4gdGhlIGNvbnRyYWN0LiBGb3IgdGhpcyByZWFzb24sIEkgY3JlYXRlZCBhIG5ldyBzY3JpcHQgdG8gdXBkYXRlIHRoZSBtZXJrbGVyb290XG4gKiAgaW4gdGhlIGNvbnRyYWN0LiBZb3UgY2FuIGZpbmQgaXQgaW4gYHNjcmlwdHMvc2V0TWVya2xlUm9vdC5qc2AuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBbXG4gICcweDkzMzU3MkQ1RjgzQjAwQTk5ODEwMmI3YmYxYTk5YzBmMTk3RTY4NUInLFxuICAnMHg4YTdhQzk4MzRlMkQ0NDg3RGEyMkRjMTMwQzk3RWU4ZkJEYzg1NTY4J1xuXVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./scripts/whitelist.js\n");

/***/ })

});